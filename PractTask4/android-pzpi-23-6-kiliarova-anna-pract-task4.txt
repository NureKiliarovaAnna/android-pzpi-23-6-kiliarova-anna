Міністерство освіти і науки України
Харківський національний університет радіоелектроніки



Кафедра ПІ




Звіт
з практичної роботи №4
з дисципліни «Програмування під Android»
   





Виконала:                                                                   Перевірив:
ст. гр. ПЗПІ-23-6                        		             ст. викладач кафедри ПІ
Кілярова А. П.						  Сокорчук І. П.







Харків 2024
ЗАВДАННЯ
     Ознайомитися з роботою SharedPreferences для збереження налаштувань застосунку, опанувати роботу з базою даних SQLite (створення, збереження та отримання даних), вивчити роботу з файлами для збереження даних у внутрішній або зовнішній пам'яті.



















ХІД РОБОТИ
     Для збереження та завантаження користувацьких даних реалізовано механізм роботи з SharedPreferences. Створено методи:
- savePreferences() для запису даних (ім'я та вік) у SharedPreferences;
- loadPreferences() для їх зчитування та відображення.
     Дані зберігаються у файлі налаштувань, що дозволяє забезпечити зручність збереження невеликих обсягів інформації. Після збереження дані одразу відображаються у текстовому полі.
     Код збереження даних у SharedPreferences:
       
1. private void savePreferences() {
2.    SharedPreferences.Editor editor = sharedPreferences.edit();
3.    editor.putString("name", etName.getText().toString());
4.    editor.putInt("age", Integer.parseInt(etAge.getText().toString()));
5.    editor.apply();
6.    loadSharedPrefs();
7. }
     
     Код завантаження даних з SharedPreferences:
     
1.  private void loadPreferences () {
2.     String name = userPreferences.getString("userName", "No Data");
3.     int age = userPreferences.getInt("userAge", 0);
4.     displayTextView.setText("Name: " + name + ", Age: " + age);
5. }
     
     Робота із SQLite
     Для роботи з базою даних використовується клас DataManager, який розширює SQLiteOpenHelper. База даних містить таблицю users, де зберігаються ім'я та вік користувачів.
- метод saveToDatabase(): дозволяє додавати нові записи у таблицю users;
- метод showUsersFromDatabase(): відображає всі записи з таблиці.
     Код збереження даних у базу:

1.	    private void saveToSQLite() {
2.	        SQLiteDatabase db = dbHelper.getWritableDatabase();
3.	        ContentValues values = new ContentValues();
4.	        values.put("name", etName.getText().toString());
5.	        values.put("age", Integer.parseInt(etAge.getText().toString()));
6.	
7.	        long result = db.insert("users", null, values);
8.	        if (result != -1) {
9.	            Toast.makeText(this, "Користувача збережено!", Toast.LENGTH_SHORT).show();
10.	        }
11.	        db.close();
12.	    } 
     
     Код відображення збережених даних:
     
1.  private void showUsersFromDatabase() {
2.     SQLiteDatabase db = databaseManager.getReadableDatabase();
3.     Cursor cursor = db.query("users", null, null, null, null, null, null);
4.
5.     StringBuilder data = new StringBuilder();
6.     if (cursor.moveToFirst()) {
7.        int nameIndex = cursor.getColumnIndex("name");
8.        int ageIndex = cursor.getColumnIndex("age");
9.        do {
10.            String name = cursor.getString(nameIndex);
11.            int age = cursor.getInt(ageIndex);
12.            data.append("Name: ").append(name).append(", Age: ").append(age).append("\n");
13.        } while (cursor.moveToNext());
14.    } else {
15.        data.append("No data available.");
16.    }
17.     displayTextView.setText(data.toString());
18.     cursor.close();
19.     db.close();
20. }

     Робота із файлами
     Для збереження даних у файл використовується клас FileOutputStream, а для їх завантаження — FileInputStream:
- метод saveToFile(): записує ім'я користувача у файл userdata.txt;
- метод loadFromFile(): читає вміст файлу та відображає його на екрані.
     Код збереження у файл:
1. private void saveToFile () {
2.     String data = inputName.getText().toString();
3.    try (FileOutputStream fos = openFileOutput("userdata.txt", MODE_PRIVATE)) {
4.        fos.write(data.getBytes());
5.        Toast.makeText(this, "File saved!", Toast.LENGTH_SHORT).show();
6.    } catch (IOException e) {
7.         e.printStackTrace();
8.      }
9. }
     
     Читання з файлу:
     
1. private void loadFromFile() {
2.    try (FileInputStream fis = openFileInput("userdata.txt")) {
3.        int c;
4.        StringBuilder fileData = new StringBuilder();
5.        while ((c = fis.read()) != -1) {
6.            fileData.append((char) c);
7.        }
8.        displayTextView.setText(fileData.toString());
9.    } catch (IOException e) {
10.        e.printStackTrace();
11.    }
12.}


























ВИСНОВКИ
     У рамках виконання практичного завдання було створено Android-застосунок, що реалізує різні методи збереження даних: SharedPreferences, SQLite, та файли. Це дозволило закріпити навички роботи із локальними сховищами даних, організувати їх збереження та доступ, а також забезпечити базові механізми роботи з базами даних та файловою системою.
     Відеозвіт на YouTube. URL: https://youtu.be/ZYa7Fo-5HYM?si=P-uC2a4_52NKMUGr





















ВИКОРИСТАНІ ДЖЕРЕЛА
1.	Документація AndroidDevelopers SharedPreferences. URL: https://developer.android.com/training/data-storage/shared-preferences (дата звернення: 26.12.2024)
2.	Документація AndroidDevelopers Save data using SQLite. URL: https://developer.android.com/training/data-storage/sqlite (дата звернення: 26.12.2024)
3.	Документація AndroidDevelopers SQLiteDatabase. URL: https://developer.android.com/reference/android/database/sqlite/SQLiteDatabase (дата звернення: 26.12.2024)
2


